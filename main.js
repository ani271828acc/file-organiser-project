#!/usr/bin/env node

let inputArr = process.argv
let command = inputArr[2]
let fs = require("fs")
let path = require("path")
let helpObj = require("./commands/help")
let organizeObj = require("./commands/organize")
let treeObj = require("./commands/tree")


if(command == "organize") {
    organizeObj.organize(inputArr[3])
} else if(command == "tree") {
    treeObj.tree(inputArr[3])
} else if(command == "help") {
    helpObj.help()
} else if(command == "disorganize") {
    disorganize(inputArr[3])
} else {
    console.log(`
/*@@@@@@@@@@@@@@@@@@@@@@@@@@&..@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@&  * *@@@@@@@%  .&@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@*%@@@@@@@@@@ .&@#  @@@@@  *& .@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@& .   %@@@@@, @@@@@, &@# *@@@% /@@@@@@#.  %@@@@@@@@@@@@
@@@@@@@@@@@@@@& %@@%.  #@( &@@@@@@/   %@@@@@# &@#.  ,%% (@@@@@@@@@@@@
@@@@@@@@@@@@@@@ %@@@@@@&, #@@@@@@@@@&@@@@@@@@, .#@@@@@% *@@@@@@@@@@@@
@@@@@@@@@@@@@@@ %@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@% ,@@@@@@@@@@@@
@@@@%      .,*( (@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@% ,@@@@@@&&@@@@
@@@@@, %@@@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&     ,,/ ,@@@@
@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@, &@@@@
@@@@@@&..@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  &@@@@@
@@@@@@@& *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. #@@@@@@
&,       ,&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%  ,(@@@@@
@, *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&/   ,&
@@&. #@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@#  .@
@@@@# ,@@@@@@@@@@@@@@&%,                    ./%@@@@@@@@@@@@@@#, .&@@@
@@@@#  #@@@@@@@@&,    ,#@@@@@@@@@@%//%@@@%         *@@@@@@@@#  .&@@@@
@@*  @@@@@@@@@#    *@@@@@@@@@@@(.&((&@@@@@@           #@@@@@@@@#  .@@
@#.   ,/&@@@#      &@@@@@@@@@@*,%#/@(%@@@@@&.           *@@@@@@#.   &
@@@@@@#  @&.       %@@@@@@@@@@%#  ,. @@@@@@@%            @@*  *%@@@@@
@@@@@&  %%         /@@@@@@@@@@@@@@@@@@@@@@@,            .@@% *@@@@@@@
@@@@@*,,#%&.        ,,,        [ANI]                     .    %@@@@@@
@@@@@@@@@@&.            *. .@@@@@@@@@@@@@. ,*            @@@@%%@@@@@@
@@@@@@@@@@,     /. *#     &@.%@@@@@@@@@/.&.  ,%&, &%.    %@@@@@@@@@@@
@@@@@@@@@( .%&../(@,   @/ (@@@@@@@@@@@@@&  @&   #@ ,@ **  %@@@@@@@@@@
@@@@@@@@% %%/*@,@@@.      #@@@@@@@@@@@@@@.      ,@&(% **% &@@@@@@@@@
@@@@@@@@% @@  %@@@@@     *@@@@@@@@@@@@@@@@      @@@@%(  (&./@@@@@@@@@
@@@@@@@@@ %@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%  %/ %@@@@@@@@@
@@@@@@@@@/ #@, *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%  *& ,@@@@@@@@@@
@@@@@@@@@@( *@@@(%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%,@@@# #@@@@@@@@@@@
@@@@@@@@@@@@@#,  /*%@@@@@@@@@@@@@@@@@@@%/,*@@@@@&**   (&@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@% ,@/@@@@,  ,#%%%%@@@@@*   @@@@#@* (@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@&/  .#@@@@@@@@@@&%%%%%&@@@@@@@@@#  @@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@*     #@@#*&@@@@@@@@, @/@@@@@@@@#,&@& ,/%&@@@@@@@@@@@@@@@
@@@@@#           .&@@@@@@&/*%@@%(.@%,@@@#*&@@@@@@,      .@@@@@@@@@@@@
@@@@*              ,@*%@@@@@*@@  *@%,%&%@@@@@@@@,         .@@@@@@@@@@
@@  *%%/.             ,(@@@@(@%&,@@ .**%@@@*%*                 *@@@@@
/ @@@@@@@@@@/ *@*&%/.     ,%. %@@@@@@@(                       .@@@@
 @@@@@@@@@@@/@*@@@@@@@,.,     @@@@@@@@@%                     ,/% (@@@
 @@@@@@@@@&.#*@@@@@@%,,,.     @@@@@&*.((                  *@@@@@%  @@
.*#%@@@@@@,(,@@@@@@@@@@@@@@@@@@@@%%@@@@%*  /&@@@   .,*.  ,(@@@@@@@@/.
%       ., ..@@@@@@@@@@@@@@@@@@@@%@@@@@@@%%@@@, @@@@@@@@#@#@@@@@@@@@,
@#               ,*%&@@@@@@@@@@@@%%*@@@@@%%&%, . @@@@@@@@*%,@@@@@&(
@@@@&(,                .@@@%, ,/*  .@@%%@%%@@@@@@ @@@@@@@%*,
@@@@@@@@@@@@*  ,(,,  ,#@@@@@%,@@/  *%@@@@@@@@@@@@ &@@*.           .
@@@@@@@@@@@@@%               *%@/  ,@@@@@@@@@@@@@                  #@
@@@@@@@@@@@@@@%                     ,@@@%#,                 .(%&@@@@@
@@@@@@@@@@@@@@@                                .,        .,@@@@@@@@@@
@@@@@@@@@@@@@@&     ,%@@@@@@@@@,&&*%&@@@@@@, .%@@ ,@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@&%* #@@@@@@@@@@@@@@@,@@(@@@@@@@@@@@@%, ,@@@@@@@@@@@@@@@@@@
@@@@@@@@@%     @@@@@@@@@@@@@@@@,@@*@@@@@@@@@@@@@@%.&@@@@@@@@@@@@@@@@@
@@@@@@@@@,    ,@@@@@@@@@@@@@@@@,@*@@@@@@@@@@@@@@@@ /@@@@@@@@@@@@@@@@@
@@@@@@@@@.    /@@@@@@@@@@@@%@@@,.#@@@%@@@@@@@@@@@@* @@@@@@@@@@@@@@@@@
@@@@@@@@@.      (&@@@@@@@@@&         %@@@@@@@@@@@@% %@@@@@@@@@@@@@@@@
@@@@@@@@&                .,/*       &@@@@@@@@@@@@@@,,@@@@@@@@@@@@@@@@
@@@@@@@@*                        ,@@@@@@@@@@@@@@@% @@@@@@@@@@@@@@@@
@@@@@@@@                      ,@@% ,@@@@@@@@@@@@@@@& &@@@@@@@@@@@@@@@
@@@@@@@%   .@@@&/.            &@@@.,@@@@@@@@@@@@@@@@ %@@@@@@@@@@@@@@@
@@@@@@@@@, %@@@@@@@@@@@@@@@  ,@@@@% %,(@@@@@@@@@@@@& &@@@@@@@@@@@@@@@
@@@@@@@@@@ /@@@@@@@@@@@@@@,  &@@@@@   ,@@@@@@@@@@@@& %@@@@@@@@@@@@@@@
@@@@@@@@@//**@@@@@@@@@@@&.  %@@@@@@&  ,@@@@@@@@@@@@@  %@@@@@@@@@@@@@@
@@@@@@@@@ %@@@@/.   ,%@@,  .@@@@@@@@%  &@@@@%,    *%@#,@@@@@@@@@@@@@@
@@@@@@@@@ %@@@@@@@@@@@@%   %@@@@@@@@@. ,@@@@@@@@@@@@@%.@@@@@@@@@@@@@@
@@@@@@@@@/ (@@@@@@@@@@@,  ,@@@@@@@@@@#  (@@@@@@@@@@@@,*@@@@@@@@@@@@@@
@@@@@@@@@@.    *%%&&%%#   @@@@@@@@@@@@.  @@@@@@@@%/. #@@@@@@@@@@@@@@@
@@@@@@@@@&             &@@@@@@@@@@@@@@@@#            &@@@@@@@@@@@@@@@
@@@@@@@@%              @@@@@@@@@@@@@@@@@%           *&@@@@@@@@@@@@@@@
@@@@@#                 @@@@@@@@@@@@@@@@@%               /@@@@@@@@@@@@
@@@@(                  @@@@@@@@@@@@@@@@@/            .    .@@@@@@@@@@
@@@% (*%@%@@@#         &@@@@@@@@@@@@@@@@,         %@@@@&.#@ @@@@@@@@@
@@@.   %*@#(@@@        @@@@@@@@@@@@@@@@@*        %@@%(@@#  .,@@@@@@@@
@@%               ,#@@@@@@@@@@@@@@@@@@@@@@%*.                @@@@@@@@
@@@@&*        .#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#.           @@@@@@@*/`)
    console.log("invalid command")
    console.log("run \"help\" to get a list of commands")
}

function organize(_path) {
    // console.log("organize " + _path)
    if(_path == undefined || !(fs.existsSync(_path))) {
        _path = process.cwd()
    } 
    console.log("all good")
    let desPath = path.join(_path, "organized_files")
    if(!fs.existsSync(desPath)) {
        fs.mkdirSync(desPath)
        console.log(desPath)
    }
    organizeHelper(_path,desPath)
}

function organizeHelper(src, dest) {
    let files = fs.readdirSync(src)
    for(let i = 0; i < files.length; i++) {
        let fileAdress = path.join(src, files[i])
        let isFile = fs.lstatSync(fileAdress).isFile()
        if(isFile) {
            let category = getCategory(files[i])
            console.log(files[i] + " belongs to -> " + category)
            let categoryPath = path.join(dest,category)
            if(!fs.existsSync(categoryPath)) {
                fs.mkdirSync(categoryPath)
            }
            let destPath = path.join(categoryPath,files[i])
            sendFile(fileAdress,destPath)
        }
    }
}

function getCategory(name) {
    let ext = path.extname(name).slice(1)
    for(let type in types) {
        for(let i = 0; i < types[type].length; i++) {
            if(ext == types[type][i]) {
                return type
            }
        }
    }
    return "other"
}

function sendFile(fileAdress,destPath) {
    fs.copyFileSync(fileAdress,destPath)
    fs.unlinkSync(fileAdress)
}


function tree(_path) {
    // console.log("tree " + _path)
    if(_path == undefined || !(fs.existsSync(_path))) {
        treeHelper(process.cwd(),0)
        return
    } 
    treeHelper(_path,0)
}

function treeHelper(src,ct) {
    let isFile = fs.lstatSync(src).isFile()
    let name = path.basename(src)
    if(isFile) {
        for(let i=0;i<ct;i++) {
            process.stdout.write("  ")
        }
        process.stdout.write('|---' + name + '\n') 
        return
    }
    for(let i=0;i<ct;i++) {
        process.stdout.write("  ")
    }
    process.stdout.write('|---' + name + '\n')
    let folders = fs.readdirSync(src)
    for(let i in folders) {
        let childPath = path.join(src,folders[i])
        treeHelper(childPath,ct+2)
    }
}

function help() {
    console.log(`
    fs_tools + tree                 : get filesystem tree of current folder
    fs_tools + organize             : organize files in current folder
    fs_tools + tree + "path"        : get filesystem tree of specified folder
    fs_tools + organize + "path"    : organize files in specified folder

    WARNING: AVOID RUNNING THESE COMMANDS ON LARGE OR SYSTEM FOLDERS
    `)
}